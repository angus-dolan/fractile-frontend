import{c4 as $,j as q,a as C,bR as M,a5 as z,o as B,c5 as Q,c as N,n as P}from"./entry.c8cb6bef.js";let R;const j=new Uint8Array(16);function F(){if(!R&&(R=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!R))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return R(j)}const i=[];for(let n=0;n<256;++n)i.push((n+256).toString(16).slice(1));function L(n,e=0){return i[n[e+0]]+i[n[e+1]]+i[n[e+2]]+i[n[e+3]]+"-"+i[n[e+4]]+i[n[e+5]]+"-"+i[n[e+6]]+i[n[e+7]]+"-"+i[n[e+8]]+i[n[e+9]]+"-"+i[n[e+10]]+i[n[e+11]]+i[n[e+12]]+i[n[e+13]]+i[n[e+14]]+i[n[e+15]]}const J=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),O={randomUUID:J};function G(n,e,f){if(O.randomUUID&&!e&&!n)return O.randomUUID();n=n||{};const t=n.random||(n.rng||F)();if(t[6]=t[6]&15|64,t[8]=t[8]&63|128,e){f=f||0;for(let g=0;g<16;++g)e[f+g]=t[g];return e}return L(t)}const K=$("conversations",()=>{const{$fractile:n}=M(),e=Z(),f=q(),t=C([]);function g(){return t.value}function l(o){return t.value.find(a=>a.id==o)}function I(o){t.value.push(o)}async function x(){t.value=[];const{data:o,error:a}=await n.chat.conversations();if(!a.value&&o.value){const S=T(o.value).sort((E,b)=>b.id-E.id);t.value=S}else throw new Error("There was a problem fetching conversations")}async function D(o){const{data:a,error:v}=await n.chat.conversation(o);return new Promise((S,E)=>{if(!v.value&&a.value){const b=T(a.value);S(b)}else E(`There was a problem fetching conversation id:${o}`)})}async function w(o){const a=l(o);if(a)a.messages=await D(o);else throw new Error(`Conversation with id ${o} not found.`)}function m(o){t.value=o}function U(o,a){const v=p(o);if(v!==-1)t.value[v]=a;else throw new Error(`Can't update conversation with id ${o}, not found.`)}function _(o,a){var E;const v=p(o),S=e.convId;if(v==-1&&S)I({id:S,user_id:(E=f.user)==null?void 0:E.id,title:a.text,created_at:new Date,messages:[a]});else if(v!==-1)t.value[v].messages.push(a);else throw new Error("There was a problem adding a message")}function s(){t.value=[]}function u(o){const a=p(o);if(a!==-1)t.value.splice(a,1);else throw new Error(`Can't remove conversation with id ${o}, not found.`)}const p=o=>t.value.findIndex(a=>a.id==o),T=o=>o.map(a=>({...a,created_at:new Date(a.created_at)}));return{all:g,get:l,create:I,fetchAll:x,fetchOne:D,restore:w,updateAll:m,update:U,addMessage:_,removeAll:s,remove:u}}),W=$("corpora",()=>{const{$fractile:n}=M(),e=C([]);function f(){return e.value}function t(s){if(s)return e.value.find(u=>u.id===s)}function g(s){e.value.push(s)}async function l(){const{data:s,error:u}=await n.corpus.list();if(!u.value&&s.value){const p=_(s.value);w(),e.value=p}else throw new Error("There was a problem fetching corpora")}async function I(s){}function x(s){e.value=s}function D(s,u){const p=U(s);if(p!==-1)e.value[p]=u;else throw new Error(`Can't update corpora with id ${s}, not found.`)}function w(){e.value=[]}function m(s){const u=U(s);if(u!==-1)e.value.splice(u,1);else throw new Error(`Can't remove corpora with id ${s}, not found.`)}const U=s=>e.value.findIndex(u=>u.id===s),_=s=>s.map(u=>({...u,created_at:new Date(u.created_at)}));return z(()=>{l()}),{items:e,all:f,get:t,create:g,fetchAll:l,fetchOne:I,updateAll:x,update:D,removeAll:w,remove:m}});function X(){const n=()=>{const t=document.documentElement.scrollHeight,g=window.innerHeight;t>g&&window.scrollTo({top:t,behavior:"smooth"})},e=()=>{window.scrollTo({top:0,behavior:"smooth"})},f=()=>{const t=document.documentElement.scrollHeight;window.scrollTo({top:t,behavior:"smooth"})};return B(()=>{window.addEventListener("resize",f)}),Q(()=>{window.removeEventListener("resize",f)}),{scrollToBottom:n,scrollToTop:e}}const{scrollToBottom:V}=X(),Y=void 0,k=void 0,Z=$("chat",()=>{const{$fractile:n}=M(),e=K(),f=W(),t=C(Y),g=N(()=>e.get(t.value)),l=C(k),I=N(()=>f.get(l.value)),x=C(!1),D=C(!1),w=C(!1),m=C("");function U(){w.value=!0}async function _(r){try{e.restore(r),t.value=r,w.value=!1}catch(c){D.value=!0,A(c.message)}}function s(){l.value=k}function u(r){l.value=r}async function p(r,c=3,h=!1){x.value=!0;const y=S(r,c,h);try{if(w){m.value=r;const d=await T(y);t.value=d.conversation_id,x.value=!1,w.value=!1,m.value="",a({text:r}),v({text:d.resp,reasoning:d.reasoning}),await P(),V()}else{m.value=r;const d=await T(y);a({text:r}),v({text:d.resp,reasoning:d.reasoning}),x.value=!1,m.value="",await P(),V()}}catch(d){A(d.message)}}async function T(r){const{data:c,error:h}=await n.chat.query(JSON.stringify(r));if(!h.value&&c.value)return c.value;A(h.value)}function o(r,c){return{id:G(),is_human:r,created_at:new Date,text:c.text,reasoning:c.reasoning??""}}function a(r){const c=o(!0,r);e.addMessage(t.value??A("Conversation ID is undefined"),c)}function v(r){const c=o(!1,r);e.addMessage(t.value??A("Conversation ID is undefined"),c)}const S=(r,c,h)=>w.value?E(r,c,h):b(r,c,h),E=(r,c,h)=>{var d;const y={msg:r,k:c.toString(),mask:h.toString()};return l.value&&(y.corpus_id=(d=l.value)==null?void 0:d.toString()),y},b=(r,c,h)=>{var d,H;const y={msg:r,k:c.toString(),mask:h.toString()};return l.value&&(y.corpus_id=(d=l.value)==null?void 0:d.toString()),t.value&&(y.conversation_id=(H=t.value)==null?void 0:H.toString()),y},A=r=>{throw new Error(r)};return{corpusId:l,corpus:I,convId:t,conversation:g,pending:x,failure:D,draft:w,pendingPrompt:m,setCorpus:u,unsetCorpus:s,restoreConversation:_,draftConversation:U,query:p,queryApi:T,buildMessage:o,humanMessage:a,agentMessage:v}});export{Z as a,K as b,W as u};
